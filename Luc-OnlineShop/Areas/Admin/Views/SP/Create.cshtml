@model Model.EF.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section header{
	Thêm mới sản phẩm
}


@using (Html.BeginForm("Create", "SP", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div style="display:flex;margin-left: 177px;" id="divto">
			<div id="divcon1">
				
				<div class="form-group">
					@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })

				</div>




				<div class="form-group">
					@Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })

				</div>



				<div class="form-group">
					@Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.PromotionPrice, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.PromotionPrice, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.PromotionPrice, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.CreateBy, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.CreateBy, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.CreateBy, "", new { @class = "text-danger" })

				</div>



				<div class="form-group">
					@Html.LabelFor(model => model.Processor, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Processor, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Processor, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.OperatingSystem, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.OperatingSystem, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.OperatingSystem, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Memory, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Memory, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Memory, "", new { @class = "text-danger" })

				</div>
			</div>
			<div style="margin-left: 100px;" id="divcon2">
				<div class="form-group">
					@Html.LabelFor(model => model.Screen, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Screen, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Screen, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Graphics, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Graphics, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Graphics, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Storage, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Storage, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Storage, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Keyboard, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Keyboard, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Keyboard, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.MemoryCardReader, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.MemoryCardReader, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.MemoryCardReader, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.WebCam, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.WebCam, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.WebCam, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Display, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Display, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Display, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Sound, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Sound, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Sound, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Pin, htmlAttributes: new { @class = "control-label col-md-2" })
					
					@Html.TextBoxFor(model => model.Pin, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Pin, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Adapter, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Adapter, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Adapter, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })

				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Mass, htmlAttributes: new { @class = "control-label col-md-2" })

					@Html.TextBoxFor(model => model.Mass, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Mass, "", new { @class = "text-danger" })

				</div>
			</div>
		</div>
      

		<style>
			
				.control-label{
					left:-59px!important;
				              }
			
		</style>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
